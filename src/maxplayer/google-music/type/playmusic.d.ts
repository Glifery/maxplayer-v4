/** Declaration file generated by dts-gen */

export = playmusic;

declare class playmusic {
    constructor();

    addPlayList(playlistName: any, callback: any): void;

    addTrackToPlayList(songIds: any, playlistId: any, callback: any): void;

    changeTrackMetadata(song: any, callback: any): void;

    createStation(name: any, seedId: any, type: any, callback: any): any;

    getAlbum(albumId: any, includeTracks: any, callback: any): void;

    getAllAccessTrack(trackId: any, callback: any): void;

    getAllTracks(opts: any, callback: any): any;

    getArtist(artistId: any, includeAlbums: any, topTrackCount: any, relatedArtistCount: any, callback: any): void;

    getFavorites(callback: any): any;

    getFavotites(callback: any): any;

    getLibrary(opts: any, callback: any): any;

    getPlayListEntries(opts: any, callback: any): void;

    getPlayLists(callback: any): void;

    getSettings(callback: any): any;

    getSharedPlayListEntries(opts: any, callback: any): void;

    getStationTracks(stationId: any, tracks: any, callback: any): void;

    getStations(callback: any): void;

    getStream(id: any, callback: any): any;

    getStreamUrl(id: any, callback: any): void;

    incrementTrackPlaycount(songId: any, callback: any): void;

    init(config: any, callback: any): any;

    login(opt: any, callback: any): void;

    removePlayListEntry(entryIds: any, callback: any): void;

    request(options: any, callback: any): void;

    search(text: any, maxResults: any, callback: any): void;

    updatePlayListMeta(playlistId: any, updates: any, callback: any): void;

}

declare namespace playmusic {
    namespace prototype {
        function addPlayList(playlistName: any, callback: any): void;

        function addTrackToPlayList(songIds: any, playlistId: any, callback: any): void;

        function changeTrackMetadata(song: any, callback: any): void;

        function createStation(name: any, seedId: any, type: any, callback: any): any;

        function getAlbum(albumId: any, includeTracks: any, callback: any): void;

        function getAllAccessTrack(trackId: any, callback: any): void;

        function getAllTracks(opts: any, callback: any): any;

        function getArtist(artistId: any, includeAlbums: any, topTrackCount: any, relatedArtistCount: any, callback: any): void;

        function getFavorites(callback: any): any;

        function getFavotites(callback: any): any;

        function getLibrary(opts: any, callback: any): any;

        function getPlayListEntries(opts: any, callback: any): void;

        function getPlayLists(callback: any): void;

        function getSettings(callback: any): any;

        function getSharedPlayListEntries(opts: any, callback: any): void;

        function getStationTracks(stationId: any, tracks: any, callback: any): void;

        function getStations(callback: any): void;

        function getStream(id: any, callback: any): any;

        function getStreamUrl(id: any, callback: any): void;

        function incrementTrackPlaycount(songId: any, callback: any): void;

        function init(config: any, callback: any): any;

        function login(opt: any, callback: any): void;

        function removePlayListEntry(entryIds: any, callback: any): void;

        function request(options: any, callback: any): void;

        function search(text: any, maxResults: any, callback: any): void;

        function updatePlayListMeta(playlistId: any, updates: any, callback: any): void;

        namespace addPlayList {
            const prototype: {
            };

        }

        namespace addTrackToPlayList {
            const prototype: {
            };

        }

        namespace changeTrackMetadata {
            const prototype: {
            };

        }

        namespace createStation {
            const prototype: {
            };

        }

        namespace getAlbum {
            const prototype: {
            };

        }

        namespace getAllAccessTrack {
            const prototype: {
            };

        }

        namespace getAllTracks {
            const prototype: {
            };

        }

        namespace getArtist {
            const prototype: {
            };

        }

        namespace getFavorites {
            const prototype: {
            };

        }

        namespace getFavotites {
            const prototype: {
            };

        }

        namespace getLibrary {
            const prototype: {
            };

        }

        namespace getPlayListEntries {
            const prototype: {
            };

        }

        namespace getPlayLists {
            const prototype: {
            };

        }

        namespace getSettings {
            const prototype: {
            };

        }

        namespace getSharedPlayListEntries {
            const prototype: {
            };

        }

        namespace getStationTracks {
            const prototype: {
            };

        }

        namespace getStations {
            const prototype: {
            };

        }

        namespace getStream {
            const prototype: {
            };

        }

        namespace getStreamUrl {
            const prototype: {
            };

        }

        namespace incrementTrackPlaycount {
            const prototype: {
            };

        }

        namespace init {
            const prototype: {
            };

        }

        namespace login {
            const prototype: {
            };

        }

        namespace removePlayListEntry {
            const prototype: {
            };

        }

        namespace request {
            const prototype: {
            };

        }

        namespace search {
            const prototype: {
            };

        }

        namespace updatePlayListMeta {
            const prototype: {
            };

        }

    }

}

